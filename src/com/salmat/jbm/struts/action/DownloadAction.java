/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.salmat.jbm.struts.action;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import com.painter.filter.SetParamValFilter;

/**
 * MyEclipse Struts Creation date: 04-01-2012
 * 
 * 使用三種參數
 * fileName 下載檔案名，必須指定
 * application 下載後呼叫的應用程式，不指定是force-download
 * charset 編碼，不指定是空白
 * 
 */
public class DownloadAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	
	private static Logger log = Logger.getLogger(DownloadAction.class);

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	protected ActionForward unspecified(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		return mapping.findForward("homepage");
	}

	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		String fileName = request.getParameter("fileName");
		String contentType = null;
		String application = request.getParameter("application");
		String charset = request.getParameter("charset") == null? "" : ";charset=" + request.getParameter("charset"); 
		//如果是空的，就是force-download，否則就是呼叫應用程式
		contentType = (application == null || application.trim().equals(""))? "force-download" : application + charset; 
		
		InputStream is = null;
		BufferedInputStream bis = null;
		BufferedOutputStream bos = null;
		OutputStream os = null;
		try {
			response.setContentType("application/" + contentType );
			response.addHeader("Content-disposition", "attachment; filename=\""
					+ fileName + "\"");
			is = SetParamValFilter.getInputStream("/pdf/" + fileName);
			bis = new BufferedInputStream(is);
            os = response.getOutputStream();
            bos = new BufferedOutputStream(os);
			int bytesRead = 0;
			byte [] buffer = new byte[1024];
			while((bytesRead = bis.read(buffer)) != -1){
				bos.write(buffer, 0, bytesRead);
			}
			bos.flush();
			os.flush();

		} catch (Exception e) {
			log.error("", e);
		} finally {
			try {
				if (bis != null)
					bis.close();
				if (is != null)
					is.close();
				if(bos != null)
					bos.close();
				if(os != null)
					os.close();
			} catch (IOException e) {
				log.error("", e);
				e.printStackTrace();
			}
			bis = null;
			is = null;
			bos = null;
			os = null;
		}
		return null;
	}

}
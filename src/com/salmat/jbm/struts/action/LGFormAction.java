/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.salmat.jbm.struts.action;

import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.mlw.vlh.ValueList;
import net.mlw.vlh.ValueListInfo;
import net.mlw.vlh.web.ValueListRequestUtil;

import org.apache.commons.beanutils.BeanUtils;
import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.action.DynaActionForm;
import org.apache.struts.actions.DispatchAction;
import org.hibernate.Transaction;

import com.salmat.jbm.hibernate.*;
import com.salmat.jbm.service.CodeService;
import com.salmat.jbm.service.CustomerService;
import com.salmat.jbm.service.EmployeeService;
import com.salmat.jbm.service.LGFormService;
import com.salmat.jbm.service.LGInfoService;
import com.salmat.jbm.service.ValueListService;
import com.salmat.jbm.struts.form.*;
import com.salmat.jbm.hibernate.HibernateSessionFactory;
import com.painter.util.Global;
import com.painter.util.SessionUtil;
import com.painter.util.Util;


/**
 * MyEclipse Struts Creation date: 02-23-2007
 * 
 * XDoclet definition:
 * 
 * @struts.action parameter="fid" validate="true"
 * @struts.action-forward name="init" path=".findUserAccount"
 */
public class LGFormAction extends DispatchAction {
    /*
     * Generated Methods
     */
    private static final LGInfoService lginfoService = LGInfoService.getInstance();
    private static final LGFormService lgformService = LGFormService.getInstance();    
    private static final CustomerService customerService = CustomerService.getInstance();
    private static final CodeService codeService = CodeService.getInstance();
    private static ValueListService valueListService = ValueListService.getInstance();    
    private static Logger log = Logger.getLogger(LGFormAction.class);

    /**
     * Method execute
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    protected ActionForward unspecified(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) {

        return mapping.findForward("homepage");
    }



    
    public ActionForward editInit(ActionMapping mapping, ActionForm form, HttpServletRequest request,
            HttpServletResponse response) {
        ActionMessages messages = new ActionMessages();
        LGFormForm myForm = (LGFormForm) form;
        String custNo = myForm.getCustNo();
        Integer statementNo = myForm.getStatementNo();
        try{
        	HibernateSessionFactory.getSession().clear();
        	ValueList dataList = getValueList(request, myForm,"lgformList");
            request.setAttribute("dataList", dataList);
        	
        	
        	Lgform lgform = lgformService.findByCustNoStatementNo (custNo,statementNo );

            request.setAttribute("lgform", lgform);
        } catch (Exception e) {
            log.error("", e);
			request.setAttribute("message", "系統失敗 ");
			return mapping.findForward("message");
        }
        return mapping.findForward("editInit");
    }
    
    
    
    
    public ActionForward editSubmit(ActionMapping mapping, ActionForm form, HttpServletRequest request,
            HttpServletResponse response) {
        LGFormForm myForm = (LGFormForm) form;
        String custNo = myForm.getCustNo();
        Integer statementNo = myForm.getStatementNo();

        try {
        	Integer ids[]=myForm.getIds();
        	Integer [] delIds = myForm.getDelIds();
        	String mailToAreas[]=myForm.getMailToAreas();
        	String lgTypes[]=myForm.getLgTypes();
        	String mailCategories[]=myForm.getMailCategories();       	
        	Integer qties[]=myForm.getQties();
        	Integer weights[]=myForm.getWeights();
        	Double prices[]=myForm.getPrices();
        	String prognms[]=myForm.getPrognms();    
        	Date dispatchDate = new Date();        	

            if(delIds != null && delIds.length == ids.length - 1){
            	request.setAttribute("message", "不可將郵資單全部行數都刪除");
            	ValueList dataList = getValueList(request, myForm,"lgformList");
                request.setAttribute("dataList", dataList);            
            	Lgform lgform = lgformService.findByCustNoStatementNo (custNo,statementNo );
                request.setAttribute("lgform", lgform);
                return mapping.findForward("editInit");
            	
        	}
            HibernateSessionFactory.getSession().clear();
        	HibernateSessionFactory.getSession().getTransaction().begin();
        	
        	//Thor add修改交寄日期 2011/10/20
        	try{
        	   Integer year = Integer.parseInt(myForm.getLgYear()) + 1911;
        	   Integer month = Integer.parseInt(myForm.getLgMonth()) - 1;
        	   Integer date = Integer.parseInt(myForm.getLgDate());
        	   Calendar cal = Calendar.getInstance();
        	   cal.set(year, month, date);
        	   myForm.setDispatchDate(cal.getTime());
        	   dispatchDate = cal.getTime();
        	}catch(Exception e){
        		log.error("", e);
        	}
        	Lgform lgformRoot = new  Lgform(); //原始這個 customerNo + StatementNo
        	
        	
        	for (int i=0; i<ids.length; i++) {        		
        		Integer id = ids[i];
        		Lgform lgform = null;
        		if (mailToAreas[i].length() == 0)
        			break;
        		if (null!= id && id>0  ) {
        			lgform = lgformService.findById(id);
        			BeanUtils.copyProperties(lgformRoot,lgform); // root object 

        		} else {
        			lgform = new Lgform();
        			BeanUtils.copyProperties( lgform , lgformRoot); //新的lgformRoot clone 出來 
        		}
        		lgform.setIdfCustNo(custNo);
        		lgform.setStatementNo(statementNo);
	        	lgform.setMailToArea(mailToAreas[i]);
	        	lgform.setLgType(lgTypes[i]);
	        	lgform.setMailCategory(mailCategories[i]);
	        	lgform.setQty(qties[i]);
	        	lgform.setWeight(weights[i]);
	        	lgform.setPrice(prices[i]);
	        	lgform.setProgNm(prognms[i]);	
	        	lgform.setDispatchDate(dispatchDate);	        
	        	lgformService.save(lgform);
        	}
        	if(delIds != null)        		
        	    for (int i=0; i<delIds.length; i++) {        		
        		    Integer id = delIds[i];
        		    Lgform lgform = null;
        		    if (mailToAreas[i].length() == 0)
        			    break;
        		    if (null!= id && id>0  ) {
        			   lgform = lgformService.findById(id);
              		   lgformService.delete(lgform);
        		    } 
        	    }

            HibernateSessionFactory.getSession().getTransaction().commit();
            request.setAttribute("message", "修改成功");
            
            
          //導回編輯頁面
        	ValueList dataList = getValueList(request, myForm,"lgformList");
            request.setAttribute("dataList", dataList);            
        	Lgform lgform = lgformService.findByCustNoStatementNo (custNo,statementNo );
            request.setAttribute("lgform", lgform);
            return mapping.findForward("editInit");
            
            //return mapping.findForward("message");
        } catch (Exception e) {
            log.error("", e);
            HibernateSessionFactory.getSession().getTransaction().rollback();
			request.setAttribute("message", "系統失敗 ");
			return mapping.findForward("message");
        }
    }
    

    
    private ValueList getValueList(HttpServletRequest request,
			LGFormForm myForm, String entryKey) {
        Map param = new HashMap();
        String custNo = myForm.getCustNo();
        Integer statementNo = myForm.getStatementNo();
    	param.put("idf_cust_no", custNo); 
    	param.put("statement_no", statementNo); 
    	
        ValueList valueList = valueListService.getValueList(request, entryKey, param);
        return valueList;
	}      
}